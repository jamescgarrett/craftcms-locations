{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/app.js","app.js","app/js/components/Locations.js","app/js/utils/ApiUtils.js","app/js/utils/GoogleMapsUtils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","_Locations","_Locations2","_ApiUtils","document","addEventListener","querySelector","data","locationContainerClass","alert","./components/Locations","./utils/ApiUtils",2,"Locations","this","geocoder","google","maps","Geocoder","locations","settings","filteredLocations","form","defaults","useCustomFormClasses","searchForm","searchInput","radiusInput","resultsContainerClass","errorsContainerClass","loadingClass","loadingContent","arguments","_typeof","options","extendDefaults","init","handleSearchSubmit","bind","getElementsByTagName","innerHTML","self","_ApiUtils2","loadData","results","getInitialView","_GoogleMapsUtils2","findCurrentLocation","push","updateView","getSearchView","zip","radius","searchRadius","defaultRadius","findLocation","getFormErrors","type","message","container","notFoundText","column","createElement","className","paragraph","bold","lBreakName","lBreakAddress","lBreakPhone","lBreakWebsite","addressLink","href","address1","city","state","zipCode","target","websiteLink","website","name","createTextNode","address2","phone","appendChild","lbreak","source","properties","property","hasOwnProperty","Symbol","iterator","constructor","_GoogleMapsUtils","prototype","event","usValid","test","value","caValid","preventDefault","../utils/ApiUtils","../utils/GoogleMapsUtils",3,"url","sendback","request","Request","method","headers","Headers","Content-Type","fetch","then","response","json","err",4,"sendResults","navigator","geolocation","useGeoLocation","getCurrentPosition","position","geolocate","LatLng","coords","latitude","longitude","findResults","parseInt","geocode","address","defaultZip","status","GeocoderStatus","OVER_QUERY_LIMIT","OK","geometry","location","ZERO_RESULTS","latSearched","lat","lngSearched","lng","nearBy","locLat","locLng","distance","Math","acos","cos","toRadian","sin","degree","PI"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport Locations from './components/Locations';\n\nimport ApiUtils from './utils/ApiUtils';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\t/*\n     *  Locations\n     *\n     */\n    if (typeof document.querySelector('.locations') !== 'undefined' && document.querySelector('.locations') !== null) {\n        const locations = new Locations({\n        \tdata: 'http://plugindev.craft.dev/api/craft/locationsplugin/locations',\n\t        locationContainerClass: 'locations-location grid-col--xxs12 grid-col--xs3'\n        });\n    } else {\n    \talert('You need a container with the class \"locations\"')\n    }\n\n});","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _Locations = require('./components/Locations');\n\nvar _Locations2 = _interopRequireDefault(_Locations);\n\nvar _ApiUtils = require('./utils/ApiUtils');\n\nvar _ApiUtils2 = _interopRequireDefault(_ApiUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    /*\n        *  Locations\n        *\n        */\n    if (typeof document.querySelector('.locations') !== 'undefined' && document.querySelector('.locations') !== null) {\n        var locations = new _Locations2.default({\n            data: 'http://plugindev.craft.dev/api/craft/locationsplugin/locations',\n            locationContainerClass: 'locations-location grid-col--xxs12 grid-col--xs3'\n        });\n    } else {\n        alert('You need a container with the class \"locations\"');\n    }\n});\n\n},{\"./components/Locations\":2,\"./utils/ApiUtils\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _ApiUtils = require('../utils/ApiUtils');\n\nvar _ApiUtils2 = _interopRequireDefault(_ApiUtils);\n\nvar _GoogleMapsUtils = require('../utils/GoogleMapsUtils');\n\nvar _GoogleMapsUtils2 = _interopRequireDefault(_GoogleMapsUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Locations() {\n\n    this.geocoder = new google.maps.Geocoder();\n    this.data = [];\n    this.locations = [];\n    this.settings = null;\n    this.filteredLocations = [];\n\n    this.form = null;\n\n    var defaults = {\n        data: null,\n        useCustomFormClasses: false,\n        searchForm: null,\n        searchInput: null,\n        radiusInput: null,\n        resultsContainerClass: '.locations-locations',\n        locationContainerClass: '.location',\n        errorsContainerClass: '.locations-searchForm-errors',\n        loadingClass: '.locations-loading',\n        loadingContent: 'LOADING'\n    };\n\n    if (arguments[0] && _typeof(arguments[0]) === 'object') {\n        this.options = extendDefaults(defaults, arguments[0]);\n    }\n\n    init.call(this);\n}\n\n/*\n *  Public Methods\n *\n */\nLocations.prototype.handleSearchSubmit = function (event) {\n\n    var searchInput = void 0,\n        radiusInput = void 0;\n    if (!this.options.useCustomFormClasses) {\n        searchInput = this.form.getElementsByTagName('input')[0];\n        radiusInput = this.form.getElementsByTagName('input')[1];\n    } else {\n        searchInput = this.options.searchInput;\n        radiusInput = this.options.radiusInput;\n    }\n\n    var usValid = /^[0-9]{5}(?:-[0-9]{4})?$/.test(searchInput.value);\n    var caValid = /[a-zA-Z][0-9][a-zA-Z](-| |)[0-9][a-zA-Z][0-9]/.test(searchInput.value);\n\n    if (searchInput.value == '') {\n        getFormErrors.call(this, 'empty');\n    } else if (usValid || caValid) {\n        getSearchView.call(this, searchInput.value, radiusInput.value);\n    } else {\n        getFormErrors.call(this, 'format');\n    }\n\n    event.preventDefault();\n};\n\n/*\n *  Private Methods\n *\n */\nfunction init() {\n\n    if (!this.options.useCustomFormClasses) {\n        var locations = document.querySelector('.locations');\n        this.form = locations.getElementsByTagName('form')[0];\n        this.form.addEventListener('submit', this.handleSearchSubmit.bind(this));\n    } else {\n        this.options.searchForm.addEventListener('submit', this.handleSearchSubmit.bind(this));\n    }\n\n    document.querySelector(this.options.loadingClass).innerHTML = this.options.loadingContent;\n\n    var self = this;\n    this.data = _ApiUtils2.default.loadData(this.options.data, function (results) {\n        self.locations = results.locations;\n        self.settings = results.settings;\n\n        getInitialView.call(self);\n    });\n}\n\nfunction getInitialView() {\n\n    var self = this;\n    _GoogleMapsUtils2.default.findCurrentLocation(this.geocoder, this.settings, this.locations, function (results) {\n        for (var i = 0; i < results.length; i++) {\n            self.filteredLocations.push(self.locations[results[i]]);\n        }\n\n        updateView.call(self);\n\n        document.querySelector(self.options.loadingClass).innerHTML = '';\n    });\n}\n\nfunction getSearchView(zip, radius) {\n\n    var self = this;\n\n    var searchRadius;\n    if (radius === '') {\n        searchRadius = this.settings.defaultRadius;\n    } else {\n        searchRadius = radius;\n    }\n\n    this.filteredLocations.length = 0;\n    document.querySelector(this.options.resultsContainerClass).innerHTML = '';\n\n    _GoogleMapsUtils2.default.findLocation(this.geocoder, zip, searchRadius, this.locations, function (results) {\n        for (var i = 0; i < results.length; i++) {\n            self.filteredLocations.push(self.locations[results[i]]);\n        }\n\n        updateView.call(self);\n    });\n}\n\nfunction getFormErrors(type) {\n\n    if (document.querySelector(this.options.errorsContainerClass).innerHTML != '') {\n        document.querySelector(this.options.errorsContainerClass).innerHTML = '';\n    }\n\n    switch (type) {\n\n        case 'empty':\n            var message = '<p>You must enter a zip code.</p>';\n            break;\n\n        case 'format':\n            var message = '<p>Your zip code doesn\\'t seem correct... Please check it again.</p>';\n            break;\n\n        default:\n            alert('What happened???');\n            break;\n    }\n\n    document.querySelector(this.options.errorsContainerClass).innerHTML = message;\n}\n\nfunction updateView() {\n\n    if (document.querySelector(this.options.errorsContainerClass).innerHTML != '') {\n        document.querySelector(this.options.errorsContainerClass).innerHTML = '';\n    }\n\n    var container = document.querySelector(this.options.resultsContainerClass);\n\n    if (this.filteredLocations.length < 1) {\n        container.innerHTML = '<p>' + this.settings.notFoundText + '</p>';\n    }\n\n    for (var i = 0; i < this.filteredLocations.length; i++) {\n        var column = document.createElement('div');\n        column.className = this.options.locationContainerClass;\n\n        // Elements\n        var paragraph = document.createElement('p');\n        var bold = document.createElement('strong');\n\n        var lBreakName = document.createElement('br');\n        var lBreakAddress = document.createElement('br');\n        var lBreakPhone = document.createElement('br');\n        var lBreakWebsite = document.createElement('br');\n\n        var addressLink = document.createElement('a');\n        addressLink.href = 'http://maps.google.com/?q=' + this.filteredLocations[i].address1 + ' ' + this.filteredLocations[i].city + ' ' + this.filteredLocations[i].state + ' ' + this.filteredLocations[i].zipCode;\n        addressLink.target = '_blank';\n\n        var websiteLink = document.createElement('a');\n        websiteLink.href = this.filteredLocations[i].website;\n        websiteLink.target = '_blank';\n\n        // name\n        var name = document.createTextNode(this.filteredLocations[i].name);\n\n        // address lines\n        var address1 = document.createTextNode(this.filteredLocations[i].address1);\n        var address2 = null;\n        if (this.filteredLocations[i].address2 != '') {\n            address2 = document.createTextNode(this.filteredLocations[i].address2);\n        }\n\n        // city, state zip\n        var city = document.createTextNode(this.filteredLocations[i].city + ', ');\n        var state = document.createTextNode(this.filteredLocations[i].state + ' ');\n        var zipCode = document.createTextNode(this.filteredLocations[i].zipCode);\n\n        // option phone and website\n        var phone = null,\n            website = null;\n        if (this.filteredLocations[i].phone != '') {\n            phone = document.createTextNode(this.filteredLocations[i].phone);\n        }\n        if (this.filteredLocations[i].website != '') {\n            website = document.createTextNode(this.filteredLocations[i].website);\n        }\n\n        column.appendChild(paragraph);\n        paragraph.appendChild(bold);\n\n        // Name\n        bold.appendChild(name);\n        paragraph.appendChild(lBreakName);\n\n        // Address\n        paragraph.appendChild(addressLink);\n        addressLink.appendChild(address1);\n        if (address2 != null) {\n            addressLink.appendChild(lbreak);\n            addressLink.appendChild(address2);\n        }\n        addressLink.appendChild(lBreakAddress);\n        addressLink.appendChild(city);\n        addressLink.appendChild(state);\n        addressLink.appendChild(zipCode);\n\n        // Phone\n        if (phone != null) {\n            paragraph.appendChild(lBreakPhone);\n            paragraph.appendChild(phone);\n        }\n\n        // Website\n        if (website != null) {\n            paragraph.appendChild(lBreakWebsite);\n            paragraph.appendChild(websiteLink);\n            websiteLink.appendChild(website);\n        }\n\n        container.appendChild(column);\n    }\n}\n\n// Utitlity Methods\nfunction extendDefaults(source, properties) {\n    var property;\n    for (property in properties) {\n        if (properties.hasOwnProperty(property)) {\n            source[property] = properties[property];\n        }\n    }\n    return source;\n}\n\nmodule.exports = Locations;\n\n},{\"../utils/ApiUtils\":3,\"../utils/GoogleMapsUtils\":4}],3:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    loadData: function loadData(url, sendback) {\n        var request = new Request(url, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        });\n\n        fetch(request).then(function (response) {\n            return response.json();\n        }).then(function (data) {\n            sendback(data);\n        }).catch(function (err) {\n            throw new Error(err);\n        });\n\n        // request\n        // .get(APIEndpoints.LOCATIONS)\n        // .accept('application/json')\n        // .end(function(error, res) {\n        //     if (res.error) {\n        //         ServerActions.receiveLocations(null, error);\n        //     } else {\n        //         var json = JSON.parse(res.text);\n        //         ServerActions.receiveLocations(json, null);\n        //     }\n        // });\n    }\n\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    findCurrentLocation: function findCurrentLocation(geocoder, settings, locations, sendResults) {\n\n        var self = this;\n\n        if (!!navigator.geolocation && settings.useGeoLocation !== '0') {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var geolocate = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                sendResults(self.findResults(geolocate, parseInt(settings.defaultRadius), locations));\n            });\n        } else {\n            geocoder.geocode({ 'address': settings.defaultZip }, function (results, status) {\n                switch (status) {\n                    case google.maps.GeocoderStatus.OVER_QUERY_LIMIT:\n                        alert('The daily query limit has been reached. Sorry. Try again Tomorrow!');\n                        break;\n\n                    case google.maps.GeocoderStatus.OK:\n                        sendResults(self.findResults(results[0].geometry.location, parseInt(settings.defaultRadius), locations));\n                        break;\n\n                    case google.maps.GeocoderStatus.ZERO_RESULTS:\n                        alert(\"Address Can't be Found!\");\n                        break;\n\n                    default:\n                        alert('Geocode error:' + status);\n                        break;\n                }\n            });\n        }\n    },\n\n    findLocation: function findLocation(geocoder, zip, radius, locations, sendResults) {\n\n        var self = this;\n\n        geocoder.geocode({ 'address': zip }, function (results, status) {\n            switch (status) {\n                case google.maps.GeocoderStatus.OVER_QUERY_LIMIT:\n                    alert('The daily query limit has been reached. Sorry. Try again Tomorrow!');\n                    break;\n\n                case google.maps.GeocoderStatus.OK:\n                    sendResults(self.findResults(results[0].geometry.location, radius, locations));\n                    break;\n\n                case google.maps.GeocoderStatus.ZERO_RESULTS:\n                    alert(\"Address Can't be Found!\");\n                    break;\n\n                default:\n                    alert('Geocode error:' + status);\n                    break;\n            }\n        });\n    },\n\n    findResults: function findResults(location, radius, locations) {\n\n        var self = this;\n\n        var latSearched = location.lat();\n        var lngSearched = location.lng();\n\n        var nearBy = [];\n\n        for (var i = 0; i < locations.length; i++) {\n\n            var locLat = locations[i].latitude;\n            var locLng = locations[i].longitude;\n\n            var distance = 3959 * Math.acos(Math.cos(self.toRadian(latSearched)) * Math.cos(self.toRadian(locLat)) * Math.cos(self.toRadian(locLng) - self.toRadian(lngSearched)) + Math.sin(self.toRadian(latSearched)) * Math.sin(self.toRadian(locLat)));\n\n            if (distance < radius) {\n                nearBy.push(i);\n            }\n        }\n\n        return nearBy;\n    },\n\n    toRadian: function toRadian(degree) {\n        return degree * Math.PI / 180;\n    }\n\n};\n\n},{}]},{},[1])\n\n","import ApiUtils from '../utils/ApiUtils';\nimport GoogleMapsUtils from '../utils/GoogleMapsUtils';\n\nfunction Locations() {\n\n    this.geocoder = new google.maps.Geocoder();\n    this.data = [];\n    this.locations = [];\n    this.settings = null;\n    this.filteredLocations = [];\n\n    this.form = null;\n\n    var defaults = {\n        data: null,\n        useCustomFormClasses: false,\n        searchForm: null,\n        searchInput: null,\n        radiusInput: null,\n        resultsContainerClass: '.locations-locations',\n        locationContainerClass: '.location',\n        errorsContainerClass: '.locations-searchForm-errors',\n        loadingClass: '.locations-loading',\n        loadingContent: 'LOADING'\n    }\n\n    if ( arguments[0] && typeof arguments[0] === 'object' ) {\n        this.options = extendDefaults(defaults, arguments[0]);\n    }\n\n    init.call(this);\n    \n}\n\n/*\n *  Public Methods\n *\n */\nLocations.prototype.handleSearchSubmit = function(event) {\n\n    let searchInput, radiusInput;\n    if (!this.options.useCustomFormClasses) {\n        searchInput = this.form.getElementsByTagName('input')[0];\n        radiusInput = this.form.getElementsByTagName('input')[1];\n    } else {\n        searchInput = this.options.searchInput;\n        radiusInput = this.options.radiusInput\n    }\n    \n\n    var usValid = /^[0-9]{5}(?:-[0-9]{4})?$/.test(searchInput.value);\n    var caValid = /[a-zA-Z][0-9][a-zA-Z](-| |)[0-9][a-zA-Z][0-9]/.test(searchInput.value);\n\n    if (searchInput.value == '') {\n        getFormErrors.call(this, 'empty');\n    }  else if ( usValid || caValid ){\n        getSearchView.call(this, searchInput.value, radiusInput.value);\n    } else {\n        getFormErrors.call(this, 'format');\n    }\n\n    event.preventDefault();\n}\n \n\n/*\n *  Private Methods\n *\n */\nfunction init() {\n\n    if (!this.options.useCustomFormClasses) {\n        let locations = document.querySelector('.locations');\n        this.form = locations.getElementsByTagName('form')[0];\n        this.form.addEventListener('submit', this.handleSearchSubmit.bind(this));\n    } else {\n        this.options.searchForm.addEventListener('submit', this.handleSearchSubmit.bind(this));\n    }\n\n    document.querySelector(this.options.loadingClass).innerHTML = this.options.loadingContent;\n\n    let self = this;\n    this.data = ApiUtils.loadData(this.options.data, function(results){\n        self.locations = results.locations;\n        self.settings = results.settings;\n\n         getInitialView.call(self);\n    });\n\n\n}\n\nfunction getInitialView() {\n\n    let self = this;\n    GoogleMapsUtils.findCurrentLocation(this.geocoder, this.settings, this.locations, function(results) {\n        for (var i = 0; i < results.length; i++) {\n            self.filteredLocations.push(self.locations[results[i]]);\n        }\n\n        updateView.call(self);\n\n        document.querySelector(self.options.loadingClass).innerHTML = '';\n    });\n}\n\nfunction getSearchView(zip, radius) {\n\n    let self = this;\n\n    var searchRadius;\n    if (radius === '') {\n        searchRadius = this.settings.defaultRadius;\n    } else {\n        searchRadius = radius\n    }\n\n    this.filteredLocations.length = 0;\n    document.querySelector(this.options.resultsContainerClass).innerHTML = '';\n\n    GoogleMapsUtils.findLocation(this.geocoder, zip, searchRadius, this.locations, function(results) {\n        for (var i = 0; i < results.length; i++) {\n            self.filteredLocations.push(self.locations[results[i]]);\n        }\n        \n        updateView.call(self);\n    });\n\n}\n\nfunction getFormErrors(type) {\n\n    if (document.querySelector(this.options.errorsContainerClass).innerHTML != '') {\n        document.querySelector(this.options.errorsContainerClass).innerHTML = ''\n    }\n    \n    switch(type) {\n\n        case 'empty':\n            var message = '<p>You must enter a zip code.</p>';\n            break;\n\n        case 'format':\n            var message = '<p>Your zip code doesn\\'t seem correct... Please check it again.</p>';\n            break;\n\n        default :\n            alert( 'What happened???');\n            break;\n    }\n\n    document.querySelector(this.options.errorsContainerClass).innerHTML = message;\n}\n\nfunction updateView() {\n\n    if (document.querySelector(this.options.errorsContainerClass).innerHTML != '') {\n        document.querySelector(this.options.errorsContainerClass).innerHTML = ''\n    }\n\n    let container = document.querySelector(this.options.resultsContainerClass);\n\n    if (this.filteredLocations.length < 1) {\n        container.innerHTML = '<p>' + this.settings.notFoundText  + '</p>';\n    }\n\n    for (var i = 0; i < this.filteredLocations.length; i++) {\n        var column = document.createElement('div');\n        column.className = this.options.locationContainerClass;\n\n        // Elements\n        var paragraph = document.createElement('p');\n        var bold = document.createElement('strong');\n        \n        var lBreakName = document.createElement('br');\n        var lBreakAddress = document.createElement('br');\n        var lBreakPhone = document.createElement('br');\n        var lBreakWebsite = document.createElement('br');\n\n        var addressLink = document.createElement('a');\n        addressLink.href = 'http://maps.google.com/?q=' + this.filteredLocations[i].address1 + ' ' + this.filteredLocations[i].city + ' ' + this.filteredLocations[i].state + ' ' + this.filteredLocations[i].zipCode;\n        addressLink.target = '_blank';\n        \n        var websiteLink = document.createElement('a');\n        websiteLink.href = this.filteredLocations[i].website;\n        websiteLink.target = '_blank';\n\n        // name\n        var name = document.createTextNode(this.filteredLocations[i].name);\n        \n        // address lines\n        var address1 = document.createTextNode(this.filteredLocations[i].address1);\n        var address2 = null;\n        if (this.filteredLocations[i].address2 != '') {\n            address2 = document.createTextNode(this.filteredLocations[i].address2);\n        }\n\n        // city, state zip\n        var city = document.createTextNode(this.filteredLocations[i].city + ', ');\n        var state = document.createTextNode(this.filteredLocations[i].state + ' ');\n        var zipCode = document.createTextNode(this.filteredLocations[i].zipCode);\n\n        // option phone and website\n        var phone = null, website = null;\n        if (this.filteredLocations[i].phone != '') {\n            phone = document.createTextNode(this.filteredLocations[i].phone);\n        }\n        if (this.filteredLocations[i].website != '') {\n            website = document.createTextNode(this.filteredLocations[i].website);\n        }\n\n        column.appendChild(paragraph);\n        paragraph.appendChild(bold);\n\n        // Name\n        bold.appendChild(name);\n        paragraph.appendChild(lBreakName);\n\n        // Address\n        paragraph.appendChild(addressLink);\n        addressLink.appendChild(address1);\n        if (address2 != null) {\n            addressLink.appendChild(lbreak);\n            addressLink.appendChild(address2);\n        }\n        addressLink.appendChild(lBreakAddress);\n        addressLink.appendChild(city);\n        addressLink.appendChild(state);\n        addressLink.appendChild(zipCode);\n\n        // Phone\n        if (phone != null) {\n            paragraph.appendChild(lBreakPhone);\n            paragraph.appendChild(phone);\n        }\n\n        // Website\n        if (website != null) {\n            paragraph.appendChild(lBreakWebsite);\n            paragraph.appendChild(websiteLink);\n            websiteLink.appendChild(website);\n        }    \n\n        container.appendChild(column);\n    }\n}\n\n// Utitlity Methods\nfunction extendDefaults(source, properties) {\n    var property;\n    for (property in properties) {\n        if (properties.hasOwnProperty(property)) {\n            source[property] = properties[property];\n        }\n    }\n    return source;\n}\n\nmodule.exports = Locations;","module.exports = {\n\n    loadData: function(url, sendback) {\n        var request = new Request(url, {\n            method: 'GET', \n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        });\n\n        fetch(request).then((response) => {\n            return response.json();\n        }).then((data) => {\n            sendback(data);\n        }).catch((err) => {\n            throw new Error(err);\n        });\n\n        // request\n        // .get(APIEndpoints.LOCATIONS)\n        // .accept('application/json')\n        // .end(function(error, res) {\n        //     if (res.error) {\n        //         ServerActions.receiveLocations(null, error);\n        //     } else {\n        //         var json = JSON.parse(res.text);\n        //         ServerActions.receiveLocations(json, null);\n        //     }\n        // });\n    }\n\n};","module.exports = {\n\n    findCurrentLocation: function(geocoder, settings, locations, sendResults) {\n\n        const self = this;\n\n        if ( !!navigator.geolocation && settings.useGeoLocation !== '0' ) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                var geolocate = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                sendResults(self.findResults(geolocate, parseInt(settings.defaultRadius), locations));\n            });\n        } else {\n            geocoder.geocode({ 'address': settings.defaultZip }, function( results, status ) {\n                switch( status ) {\n                    case google.maps.GeocoderStatus.OVER_QUERY_LIMIT :\n                        alert( 'The daily query limit has been reached. Sorry. Try again Tomorrow!' );\n                        break;\n\n                    case google.maps.GeocoderStatus.OK :\n                        sendResults(self.findResults(results[0].geometry.location, parseInt(settings.defaultRadius), locations));\n                        break;\n\n                    case google.maps.GeocoderStatus.ZERO_RESULTS :\n                        alert( \"Address Can't be Found!\" );\n                        break;\n\n                    default :\n                        alert( 'Geocode error:' + status );\n                        break;\n                }\n\n            });\n        }\n    },\n\n    findLocation: function(geocoder, zip, radius, locations, sendResults) {\n\n        const self = this;\n\n        geocoder.geocode({ 'address': zip }, function( results, status ) {\n            switch( status ) {\n                case google.maps.GeocoderStatus.OVER_QUERY_LIMIT :\n                    alert( 'The daily query limit has been reached. Sorry. Try again Tomorrow!' );\n                    break;\n\n                case google.maps.GeocoderStatus.OK :\n                    sendResults(self.findResults(results[0].geometry.location, radius, locations));\n                    break;\n\n                case google.maps.GeocoderStatus.ZERO_RESULTS :\n                    alert( \"Address Can't be Found!\" );\n                    break;\n\n                default :\n                    alert( 'Geocode error:' + status );\n                    break;\n            }\n\n        });\n\n    },\n\n    findResults: function(location, radius, locations) {\n\n        const self = this;\n\n        let latSearched = location.lat();\n        let lngSearched = location.lng();\n\n        var nearBy = []\n\n        for( var i = 0; i < locations.length; i++ ) {\n\n            var locLat = locations[i].latitude;\n            var locLng = locations[i].longitude;\n\n            var distance = 3959 * Math.acos( Math.cos( self.toRadian(latSearched) ) * \n                    Math.cos( self.toRadian( locLat ) ) * Math.cos( self.toRadian( locLng ) - \n                        self.toRadian(lngSearched) ) + Math.sin( self.toRadian(latSearched) ) * \n                            Math.sin( self.toRadian( locLat )));\n\n            \n            if ( distance < radius ) {\n                nearBy.push(i);\n            }\n        }\n\n       return nearBy;\n\n    },\n\n    toRadian: function(degree) {\n        return degree * Math.PI/180;\n    }\n\n};"],"sourceRoot":"/source/"}